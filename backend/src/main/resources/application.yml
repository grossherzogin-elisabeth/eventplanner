# https://docs.spring.io/spring-boot/appendix/application-properties/index.html

build:
  time: ${BUILD_DATE:now}
  commit: ${BUILD_COMMIT:local}
  branch: ${BUILD_BRANCH:main}

notifications:
  added-to-waiting-list:
    enabled: true
  removed-from-waiting-list:
    enabled: true
  added-to-crew:
    enabled: true
  removed-from-crew:
    enabled: true
  confirm-participation-request:
    enabled: true
  confirm-participation-reminder:
    enabled: true
  crew-registration-canceled:
    enabled: true
  crew-registration-added:
    enabled: true
  user-data-changed:
    enabled: true

email:
  # If not empty, email notifications will only be sent to these email addresses
  enabled: true
  recipients-whitelist: ${EMAIL_WHITELIST:}
  title-prefix: ''

auth:
  logout-success-url: ${frontend.url}/login
  login-success-url: ${frontend.url}
  # OIDC users with this email address in their token will automatically become admins
  admins: ${ADMIN_EMAILS:}
  # 60 * 60 * 24 * 30 seconds
  session-timout: 2592000

security:
  # TODO csrf protection currently blocks all post requests even if the xsrf token is present
  # temporary disabled until further investigation
  enable-csrf: false

data:
  directory: ${DATA_DIRECTORY:data}
  encryption-password: ${DATA_ENCRYPTION_PASSWORD:default-encryption-password}
  encryption-rotation:
    rotate-users: ${ROTATE_USER_ENCRYPTION:false}
    old-secret: ${DATA_ENCRYPTION_PASSWORD_OLD:}
    new-secret: ${DATA_ENCRYPTION_PASSWORD:}
  db-url: jdbc:sqlite:${data.directory}/eventplanner.db

spring:
  datasource:
    hikari:
      maximum-pool-size: 1
    driver-class-name: org.sqlite.JDBC
    url: ${data.db-url}
  jpa:
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    hibernate:
      ddl-auto: none
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    url: ${data.db-url}
  security:
    oauth2:
      client:
        registration:
          default:
            client-id: ${OAUTH_CLIENT_ID:eventplanner}
            client-secret: ${OAUTH_CLIENT_SECRET:********************}
            provider: default
            redirect-uri: ${frontend.url}/login/oauth2/code/default
            scope: openid,email,profile
        provider:
          default:
            issuer-uri: ${OAUTH_ISSUER_URI}
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  session:
    timeout: ${auth.session-timout}

server:
  protocol: ${PROTOCOL:https}
  host: ${HOST:localhost}
  port: ${PORT:80}
  url: ${HOST_URL:${server.protocol}://${server.host}:${server.port}}
  servlet:
    session:
      timeout: ${auth.session-timout}s
      cookie:
        max-age: ${auth.session-timout}

frontend:
  protocol: ${server.protocol}
  host: ${server.host}
  port: ${server.port}
  url: ${HOST_URL:${frontend.protocol}://${frontend.host}:${frontend.port}}

logging:
  file:
    path:
      ./logs
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd'T'HH:mm:ss. SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([%mdc{user:-system}]){yellow}%clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    root: INFO